{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","frame","setFrame","formVal","setFormVal","instance","setInstance","className","onSubmit","e","preventDefault","goToAndStop","type","value","onChange","cur","target","isNaN","Math","max","min","onClick","play","lottieRef","onEvent","round","currentFrame","autoplay","loop","controls","src","require","style","height","width","setSpeed","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ihxHA8DeA,MA1Df,WAAgB,IAAD,EAEaC,mBAAS,GAFtB,mBAENC,EAFM,KAECC,EAFD,OAGiBF,mBAAS,GAH1B,mBAGNG,EAHM,KAGGC,EAHH,OAImBJ,mBAAS,MAJ5B,mBAINK,EAJM,KAIIC,EAJJ,KAqBb,OACE,sBAAKC,UAAU,MAAf,UACE,kDAAqBN,EAArB,OAEA,uBAAMO,SAVW,SAACC,GACpBA,EAAEC,iBACFL,EAASM,YAAYR,GAAS,GAC9BC,EAAW,IAOT,UACE,gCACE,uBAAOQ,KAAK,OAAOC,MAAOV,EAASW,SArBtB,SAACL,GACpB,IAAIM,EAAMN,EAAEO,OAAOH,MACfI,MAAMF,KACRA,EAAM,GACRA,EAAMG,KAAKC,IAAIJ,EAAK,GACpBA,EAAMG,KAAKE,IAAIL,EAAK,IACpBX,EAAWW,QAiBP,uBAAOH,KAAK,SAASC,MAAM,WAG7B,wBAAQQ,QAAS,kBAAMhB,EAASiB,QAAhC,oBAEA,cAAC,IAAD,CACEC,UAAW,SAAAlB,GACTC,EAAYD,IAEdmB,QAAS,SAAAf,GACG,UAANA,GACFP,EAASgB,KAAKO,MAAMpB,EAASqB,gBAGjCC,UAAU,EACVC,MAAM,EACNC,UAAU,EACVC,IAAKC,EAAQ,IACbC,MAAO,CAACC,OAAQ,QAASC,MAAO,WAIlC,wBAAQb,QAAS,kBAAMhB,EAAS8B,SAAS,MAAzC,qBACA,wBAAQd,QAAS,kBAAMhB,EAAS8B,SAAS,IAAzC,qBACA,wBAAQd,QAAS,kBAAMhB,EAAS8B,SAAS,IAAzC,yBC7CSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.59c0aa20.chunk.js","sourcesContent":["import './App.css';\nimport { useState } from 'react';\nimport { Player } from '@lottiefiles/react-lottie-player';\n\nfunction App() {\n  \n  const [frame, setFrame] = useState(0);\n  const [formVal, setFormVal] = useState(0);\n  const [instance, setInstance] = useState(null);\n\n  const handleChange = (e) => {\n    let cur = e.target.value;\n    if (isNaN(cur))\n      cur = 0;\n    cur = Math.max(cur, 0);\n    cur = Math.min(cur, 20);\n    setFormVal(cur);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    instance.goToAndStop(formVal, true);\n    setFormVal(0);\n  };\n\n  return (\n    <div className=\"App\">\n      <h3> Current Frame: {frame} </h3>\n\n      <form onSubmit={handleSubmit}>\n        <label>\n          <input type=\"text\" value={formVal} onChange={handleChange} />\n        </label>\n        <input type=\"submit\" value=\"Set\"/>\n      </form>\n\n      <button onClick={() => instance.play()}> Play </button>\n\n      <Player\n        lottieRef={instance => {\n          setInstance(instance);\n        }}\n        onEvent={e => {\n          if (e === 'frame') {\n            setFrame(Math.round(instance.currentFrame));\n          }\n        }}\n        autoplay={true}\n        loop={true}\n        controls={true}\n        src={require('./assets/yoga.json')}\n        style={{height: '400px', width: '400px'}}\n      >\n      </Player>\n\n      <button onClick={() => instance.setSpeed(0.25)}> 0.25x </button>\n      <button onClick={() => instance.setSpeed(1.00)}> 1.00x </button>\n      <button onClick={() => instance.setSpeed(2.00)}> 2.00x </button>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}